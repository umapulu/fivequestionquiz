{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/components/Persons/Person/Person.js\";\n\n/*\nimport React from 'react';\nimport './Person.css';\n//import Radium from 'radium';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\nwidth: 60%;\nmargin: 16px;\nborder: 1px solid #eee;\nbox-shadow: 0 2px 3px #ccc;\npadding: 16px;\ntext-align: center;\n\n@media (min-width: 500px) {\n    width: 450px;\n}\n`;\n\n/*\nconst person = (props) => {\n    const style = {\n        '@media (min-width: 500px)': {\n            width: '450px'\n        }\n    };\n    return (\n       // <div className = 'Person' style = {style}>\n        <StyledDiv>\n            <p onClick= {props.click}> I'm {props.name}, and I am {props.age} years old</p>\n            <p> {props.children}</p>\n            <input type = \"text\" onChange= {props.changed} value={props.name}/>\n        </StyledDiv>\n    )\n};\n*/\n//if you have dynamic content, wrap in single curly braces\n// use for dynamic number 1-30 {Math.floor(Math.random()*30)}\n//export default (person);\n//while sending the export through Radium is enough for sudo selectors\n//for media queries or animations w/ key frames, must wrap the whole app \n//cant just send it through Radium, must wrap \nimport React, { Component, useContext } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport classes from './Person.css';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../../context/auth-context';\n\nconst person = props => {\n  console.log('[Person.js] rendering ...');\n  /*    const rnd = Math.random();\n  \n      if ( rnd > 0.7 ) {\n          throw new Error('Something went wrong!');\n      }\n  */\n  //can use React.fragment instead or <fragment> after importing\n  //the fragment\n  //aux is a higher order component (hoc)\n\n  const authContext = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'person',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, AuthContext.authenticated ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \" Authenticated \") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \" Please log in\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: props.click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }, \"I'm \", props.name, \" and I am \", props.age, \" years old!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, props.children), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: props.changed,\n    value: props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  })))) //aux component is an empty wrapper\n  ;\n}; //checks that the proper props are passed through\n\n\nperson.propTypes = {\n  click: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number,\n  changed: PropTypes.func\n};\nexport default person;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/components/Persons/Person/Person.js"],"names":["React","Component","useContext","Aux","classes","PropTypes","AuthContext","person","props","console","log","authContext","authenticated","click","name","age","children","changed","propTypes","func","string","number"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AAEA;AAEA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACF;;;;;;AAKG;AACH;AACA;;AACA,QAAMC,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;AAEE,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WAAW,CAACM,aAAZ,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADC,gBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHN,eAIG;AAAG,IAAA,OAAO,EAAEJ,KAAK,CAACK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKL,KAAK,CAACM,IADX,gBAC2BN,KAAK,CAACO,GADjC,gBAJH,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAK,CAACQ,QAAV,CAPJ,eAQG;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAER,KAAK,CAACS,OAAnC;AAA4C,IAAA,KAAK,EAAET,KAAK,CAACM,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,CADA,CADF,CADF,CAcS;AAdT;AAgBD,CA7BD,C,CA8BA;;;AACAP,MAAM,CAACW,SAAP,GAAmB;AACjBL,EAAAA,KAAK,EAAER,SAAS,CAACc,IADA;AAEjBL,EAAAA,IAAI,EAAET,SAAS,CAACe,MAFC;AAGjBL,EAAAA,GAAG,EAAEV,SAAS,CAACgB,MAHE;AAIjBJ,EAAAA,OAAO,EAAEZ,SAAS,CAACc;AAJF,CAAnB;AAMA,eAAeZ,MAAf","sourcesContent":["/*\nimport React from 'react';\nimport './Person.css';\n//import Radium from 'radium';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\nwidth: 60%;\nmargin: 16px;\nborder: 1px solid #eee;\nbox-shadow: 0 2px 3px #ccc;\npadding: 16px;\ntext-align: center;\n\n@media (min-width: 500px) {\n    width: 450px;\n}\n`;\n\n/*\nconst person = (props) => {\n    const style = {\n        '@media (min-width: 500px)': {\n            width: '450px'\n        }\n    };\n    return (\n       // <div className = 'Person' style = {style}>\n        <StyledDiv>\n            <p onClick= {props.click}> I'm {props.name}, and I am {props.age} years old</p>\n            <p> {props.children}</p>\n            <input type = \"text\" onChange= {props.changed} value={props.name}/>\n        </StyledDiv>\n    )\n};\n*/\n\n//if you have dynamic content, wrap in single curly braces\n// use for dynamic number 1-30 {Math.floor(Math.random()*30)}\n\n//export default (person);\n\n//while sending the export through Radium is enough for sudo selectors\n//for media queries or animations w/ key frames, must wrap the whole app \n//cant just send it through Radium, must wrap \n\nimport React, {Component, useContext} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport classes from './Person.css';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../../context/auth-context';\n\nconst person = props => {\n\n  console.log('[Person.js] rendering ...')\n/*    const rnd = Math.random();\n\n    if ( rnd > 0.7 ) {\n        throw new Error('Something went wrong!');\n    }\n*/ //can use React.fragment instead or <fragment> after importing\n//the fragment\n//aux is a higher order component (hoc)\nconst authContext = useContext(AuthContext);\n\n  return (\n    <Aux> \n      <div align = 'center'>\n      <div className={'person'} >       \n          {AuthContext.authenticated ? \n          <p> Authenticated </p> \n          : <p> Please log in</p>}   \n         <p onClick={props.click}>\n         I'm {props.name} and I am {props.age} years old!\n         </p>\n          <p>{props.children}</p>\n         <input type=\"text\" onChange={props.changed} value={props.name} />\n     </div>\n     </div>\n    </Aux> //aux component is an empty wrapper\n  );\n};\n//checks that the proper props are passed through\nperson.propTypes = {\n  click: PropTypes.func,\n  name: PropTypes.string,\n  age: PropTypes.number,\n  changed: PropTypes.func\n}\nexport default person; "]},"metadata":{},"sourceType":"module"}