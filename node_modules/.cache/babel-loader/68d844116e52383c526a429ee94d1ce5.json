{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/working-apps/my-app/src/Question/Question.js\";\nimport React from 'react';\nimport './Question.css'; //initializes a question arrow function\n\nconst question = props => {\n  var questionFormat = null; //this is what's displayed if the question is a number input\n\n  if (props.qType === \"ni\") {\n    questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n      className: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, props.question, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: props.changedInput,\n      value: props.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }));\n  } //this is what is displayed if the question is a dropdown\n  else if (props.qType === \"dd\") {\n      questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n        className: 'question',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, props.question, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropbtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, \"Dropdown\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, props.options.map((option, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          onChange: props.selected,\n          name: props.id + 89,\n          id: props.id + index,\n          value: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: props.id + index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }\n        }, option));\n      }))));\n    } //this is what is displayed if the question is a multiple choice or true false\n    else {\n        questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n          className: 'question',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }\n        }, props.question, \" \"), props.options.map((option, index) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            align: \"left\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"input\", {\n            type: \"radio\",\n            onChange: props.selected,\n            name: props.id,\n            value: option,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"label\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }\n          }, option));\n        }));\n      } //this is what is exported in \"export default question\"\n  //this is what is returned for each individual\n  //question object\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, questionFormat));\n};\n\nexport default question;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/working-apps/my-app/src/Question/Question.js"],"names":["React","question","props","questionFormat","qType","changedInput","options","map","option","index","selected","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  './Question.css';\n\n//initializes a question arrow function\nconst question = ( props ) => {\n\n    var questionFormat = null;\n\n//this is what's displayed if the question is a number input\n    if (props.qType === \"ni\"){\n        questionFormat = \n            (<div className={'question'} >\n            <p >{props.question} </p>\n            <input type=\"text\" onChange={props.changedInput} value = {props.options} />\n            </div>);\n    }\n//this is what is displayed if the question is a dropdown\n    else if (props.qType === \"dd\") {\n        questionFormat = \n        (\n        <div className={'question'}>\n                <p >{props.question} </p>\n                <div className=\"dropdown\">\n                    <button className=\"dropbtn\">Dropdown</button>\n                    <div className=\"dropdown-content\">\n                        {props.options.map((option, index) => {\n                            return <div >\n                                <input type= \"radio\" onChange={props.selected} name = {props.id + 89} id = {props.id + index} value = {option}/>\n                                <label htmlFor= {props.id + index} >{option}</label>\n                                </div>\n                        })}\n                    </div>\n                </div>\n        </div>);\n    }\n    //this is what is displayed if the question is a multiple choice or true false\n    else  {\n        questionFormat = \n            (<div className={'question'}>\n            <p >{props.question} </p>\n                {props.options.map((option, index) => {\n                    return <div  align = 'left'>\n                        <input type=\"radio\" onChange={props.selected} name = {props.id} value = {option}/>\n                        <label >{option}</label>\n                        \n                    </div>\n            })}\n            \n            </div>);\n    }\n\n//this is what is exported in \"export default question\"\n//this is what is returned for each individual\n//question object\n    return (\n        <div>\n            \n            <div>\n                {questionFormat}\n            </div>\n        </div>\n    )\n};\n\nexport default question;"]},"metadata":{},"sourceType":"module"}