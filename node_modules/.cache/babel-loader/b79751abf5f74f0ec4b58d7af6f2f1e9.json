{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      submit: null,\n      showInstructions: false\n    };\n\n    this.createQuestionsArray = () => {\n      let questionsList = [];\n      QuestionData.map((question, index) => {\n        return questionsList.push(question);\n      });\n      var randomNums = [];\n      var questions5 = [];\n\n      while (randomNums.length < 5) {\n        var r = Math.floor(Math.random() * 50);\n\n        if (randomNums.indexOf(r) === -1) {\n          randomNums.push(r);\n          questions5.push(questionsList[r]);\n        } //sreturn this.state.questions;\n\n\n        ;\n      }\n\n      this.setState({\n        questions: questions5\n      });\n      this.setState({\n        submit: /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.checkAnswers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }\n        }, \"Submit\")\n      });\n    };\n\n    this.checkAnswer = () => {\n      var input = true;\n\n      if (input == true) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.inputChangedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const question = { ...this.state.questions[questionIndex]\n      };\n      question.incorrect = event.target.value;\n      const questions = [...this.state.questions];\n      questions[questionIndex] = question;\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.toggleInstructionsHandler = () => {\n      const doesShow = this.state.showInstructions;\n      this.setState({\n        showInstructions: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let instructions = null;\n\n    if (this.state.showInstructions) {\n      instructions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }), \"Welcome to the FBLA 5 Question Quiz! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }\n      }), \"Please fill out the following 5 questions \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 51\n        }\n      }), \"and click submit to receive your answer. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 50\n        }\n      }), \"Refresh to receive a new set of questions. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let questions = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, this.state.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(Question, {\n        id: question.id,\n        question: question.question,\n        answer: question.answer,\n        incorrect: question.incorrect,\n        qType: question.qType,\n        changed: event => this.inputChangedHandler(event, question.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      });\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'App',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"FBLA 5 Question Quiz\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Test Your Knowledge of FBLA and its History\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: 'btnClass',\n      onClick: this.toggleInstructionsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Click To Open/Close Instructions\"), instructions, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createQuestionsArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \" Click to Generate Questions\"), questions, this.state.submit, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 63\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 72\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 99\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 108\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","QuestionData","Question","App","state","questions","submit","showInstructions","createQuestionsArray","questionsList","map","question","index","push","randomNums","questions5","length","r","Math","floor","random","indexOf","setState","checkAnswers","checkAnswer","input","inputChangedHandler","event","id","questionIndex","findIndex","q","incorrect","target","value","toggleInstructionsHandler","doesShow","render","instructions","answer","qType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\n\n\nclass App extends Component {\n  state = {\n    questions: [\n   \n    ],\n    submit: null,\n    showInstructions: false\n  }\n \n  createQuestionsArray = () => {\n    let questionsList = [];\n      QuestionData.map((question, index)=>{\n        return questionsList.push( question);\n        \n      }) \n        var randomNums = [];\n        var questions5 = [];\n    while(randomNums.length < 5){\n      var r = Math.floor(Math.random() * 50);\n      if(randomNums.indexOf(r) === -1){\n        randomNums.push(r);\n        questions5.push(questionsList[r]);\n      }\n      //sreturn this.state.questions;\n      ;}\n      this.setState( {questions: questions5 } ); \n      this.setState({submit: \n      <button onClick = {this.checkAnswers}>\n        Submit\n      </button> }) \n     \n  };\n\n  checkAnswer = () => {\n  var input = true; \n    if(input == true){\n      return true;\n    }\n    \n    return false;\n  }\n  \n inputChangedHandler = ( event, id ) => {\n    const questionIndex = this.state.questions.findIndex( q => {\n      return q.id === id;\n    } );\n\n    const question = {\n      ...this.state.questions[questionIndex]\n    };\n\n    question.incorrect = event.target.value;\n\n    const questions = [...this.state.questions];\n    questions[questionIndex] = question;\n\n    this.setState( { questions: questions } );\n  }\n\n  toggleInstructionsHandler = () => {\n    const doesShow = this.state.showInstructions;\n    this.setState( { showInstructions: !doesShow } );\n  }\n\n  render () {\n    let instructions = null;\n\n    if ( this.state.showInstructions ) {\n      instructions = (<div>\n        <br></br>\n        <br></br>\n        Welcome to the FBLA 5 Question Quiz! <br></br>\n        Please fill out the following 5 questions <br></br>\n        and click submit to receive your answer. <br></br>\n        Refresh to receive a new set of questions. <br></br>\n        <br></br>\n        <br></br>\n      </div>);\n\n    }\n\n    let questions = (\n      <div>\n        {this.state.questions.map( ( question, index ) => {\n          \n         return <Question\n          id = {question.id}\n          question={question.question}\n          answer={question.answer}\n          incorrect = {question.incorrect}\n          qType = {question.qType}\n          changed={( event ) => this.inputChangedHandler( event, question.id )} \n          /> \n        } )}\n         \n      </div>\n    )\n\n\n\n    return (\n      <div className={'App'}>\n        <h1>FBLA 5 Question Quiz</h1>\n        <h3>Test Your Knowledge of FBLA and its History</h3>\n        \n        <button\n          className={'btnClass'}\n          onClick={this.toggleInstructionsHandler}>Click To Open/Close Instructions</button>\n        {instructions}\n        <button\n          onClick = {this.createQuestionsArray}> Click to Generate Questions\n        </button>\n        {questions}\n        {this.state.submit}\n        <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n      </div>\n    );\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}