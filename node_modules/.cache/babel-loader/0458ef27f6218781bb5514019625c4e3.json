{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [{\n        id: 'asfa1',\n        question: 'Max',\n        answer: 28\n      }, {\n        id: 'vasdf1',\n        question: 'Manu',\n        answer: 29\n      }, {\n        id: 'asdf11',\n        question: 'Stephanie',\n        answer: 26\n      }, {\n        id: 'asdf11',\n        question: 'Stephanie',\n        answer: 26\n      }],\n      showInstructions: false\n    };\n\n    this.createQuestionsArray = () => {\n      let questionsList = [];\n      QuestionData.map((question, index) => {\n        questionsList += question;\n      });\n      var arr = [];\n\n      while (arr.length < 5) {\n        var r = Math.floor(Math.random() * 50);\n\n        if (arr.indexOf(r) === -1) {\n          arr.push(r);\n          const questions = this.state.questions;\n          this.setState({\n            questions: questions + questionsList[r]\n          });\n        }\n\n        ;\n      }\n\n      console.log(questionsList);\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const question = { ...this.state.questions[questionIndex]\n      };\n      question.name = event.target.value;\n      const questions = [...this.state.questions];\n      questions[questionIndex] = question;\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.toggleInstructionsHandler = () => {\n      const doesShow = this.state.showInstructions;\n      this.setState({\n        showInstructions: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let instructions = null;\n\n    if (this.state.showInstructions) {\n      instructions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }), \"Welcome to the FBLA 5 Question Quiz! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 46\n        }\n      }), \"Please fill out the following 5 questions \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 51\n        }\n      }), \"and click submit to receive your answer. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }\n      }), \"Refresh to receive a new set of questions. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let questions = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, this.state.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        key: question.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Question, {\n        name: question.question,\n        age: question.answer,\n        changed: event => this.nameChangedHandler(event, question.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }));\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'App',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"FBLA 5 Question Quiz\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Test Your Knowledge of FBLA and its History\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: 'btnClass',\n      onClick: this.toggleInstructionsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Click To Open/Close Instructions\"), instructions, questions); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","QuestionData","Question","ErrorBoundary","App","state","questions","id","question","answer","showInstructions","createQuestionsArray","questionsList","map","index","arr","length","r","Math","floor","random","indexOf","push","setState","console","log","nameChangedHandler","event","questionIndex","findIndex","q","name","target","value","toggleInstructionsHandler","doesShow","render","instructions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  state = {\n    questions: [\n      { id: 'asfa1', question: 'Max', answer: 28 },\n      { id: 'vasdf1', question: 'Manu', answer: 29 },\n      { id: 'asdf11', question: 'Stephanie', answer: 26 },\n      { id: 'asdf11', question: 'Stephanie', answer: 26 }\n    ],\n    showInstructions: false\n  }\n  createQuestionsArray = () => {\n    let questionsList = [];\n      QuestionData.map((question, index)=>{\n        questionsList += question;\n      }) \n        var arr = [];\n    while(arr.length < 5){\n      var r = Math.floor(Math.random() * 50);\n      if(arr.indexOf(r) === -1){\n        arr.push(r)\n        const questions = this.state.questions;\n        this.setState( { questions: questions + questionsList[r]  } )\n      }\n      ;}\n      \n\n  console.log(questionsList);\n  };\n\n  \n  \n  nameChangedHandler = ( event, id ) => {\n    const questionIndex = this.state.questions.findIndex( q => {\n      return q.id === id;\n    } );\n\n    const question = {\n      ...this.state.questions[questionIndex]\n    };\n\n    question.name = event.target.value;\n\n    const questions = [...this.state.questions];\n    questions[questionIndex] = question;\n\n    this.setState( { questions: questions } );\n  }\n\n  toggleInstructionsHandler = () => {\n    const doesShow = this.state.showInstructions;\n    this.setState( { showInstructions: !doesShow } );\n  }\n\n  render () {\n    let instructions = null;\n\n    if ( this.state.showInstructions ) {\n      instructions = (<div>\n        <br></br>\n        <br></br>\n        Welcome to the FBLA 5 Question Quiz! <br></br>\n        Please fill out the following 5 questions <br></br>\n        and click submit to receive your answer. <br></br>\n        Refresh to receive a new set of questions. <br></br>\n        <br></br>\n        <br></br>\n      </div>);\n\n    }\n\n    let questions = (\n      <div>\n        {this.state.questions.map( ( question, index ) => {\n          return <ErrorBoundary key={question.id}>\n            <Question\n              name={question.question}\n              age={question.answer}\n              changed={( event ) => this.nameChangedHandler( event, question.id )} />\n          </ ErrorBoundary>\n        } )}\n      </div>\n    )\n\n    return (\n      <div className={'App'}>\n        <h1>FBLA 5 Question Quiz</h1>\n        <h3>Test Your Knowledge of FBLA and its History</h3>\n        <button\n          className={'btnClass'}\n          onClick={this.toggleInstructionsHandler}>Click To Open/Close Instructions</button>\n        {instructions}\n        {questions}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}