{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      submit: null,\n      showInstructions: false,\n      userAnswers: [],\n      quizResults: [],\n      showResults: false\n    };\n\n    this.createQuestionsArray = () => {\n      this.setState({\n        userAnswers: [null, null, null, null, null]\n      }, () => {\n        console.log(this.state.userAnswers);\n      });\n      let questionsList = [];\n      QuestionData.map((question, index) => {\n        return questionsList.push(question);\n      });\n      var randomNums = [];\n      var questions5 = [];\n\n      while (randomNums.length < 5) {\n        var r = Math.floor(Math.random() * 50);\n\n        if (randomNums.indexOf(r) === -1) {\n          randomNums.push(r);\n          questions5.push(questionsList[r]);\n        }\n\n        ;\n      }\n\n      this.setState({\n        questions: questions5\n      });\n      this.setState({\n        submit: /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.checkAnswers,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, \"Submit\")\n      });\n    };\n\n    this.checkAnswers = () => {\n      for (var x = 0; x < 5; x++) {\n        if (this.state.userAnswers[x] === null) {\n          alert(\"Please fill out all questions before submitting\");\n          return;\n        }\n      }\n\n      var incorrect = [];\n      var correct = [];\n      var numCorrect = 0;\n\n      for (var y = 0; y < 5; y++) {\n        if (this.state.userAnswers[y] === this.state.questions[y].answer) {\n          numCorrect++;\n          correct.push(this.state.questions[y]);\n        } else {\n          incorrect.push(this.state.questions[y]);\n        }\n      }\n\n      this.setState({\n        questions: []\n      });\n      this.setState({\n        submit: null\n      });\n      this.setState({\n        quizResults: [{\n          numCorrect: numCorrect,\n          incorrect: incorrect,\n          correct: correct\n        }]\n      });\n      this.setState({\n        showResults: true\n      });\n    };\n\n    this.answerSelectedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const answers = [...this.state.userAnswers];\n      answers[questionIndex] = event.target.value;\n      this.setState({\n        userAnswers: answers\n      }, () => {\n        console.log(this.state.userAnswers);\n      });\n    };\n\n    this.inputChangedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const question = { ...this.state.questions[questionIndex]\n      };\n      question.options = event.target.value;\n      const questions = [...this.state.questions];\n      questions[questionIndex] = question;\n      this.setState({\n        questions: questions\n      });\n      const answers = [...this.state.userAnswers];\n      answers[questionIndex] = event.target.value;\n      this.setState({\n        userAnswers: answers\n      }, () => {\n        console.log(this.state.userAnswers);\n      });\n    };\n\n    this.toggleInstructionsHandler = () => {\n      const doesShow = this.state.showInstructions;\n      this.setState({\n        showInstructions: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let instructions = null;\n\n    if (this.state.showInstructions) {\n      instructions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }), \"Welcome to the FBLA 5 Question Quiz! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 46\n        }\n      }), \"Please fill out the following 5 questions \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 51\n        }\n      }), \"and click submit to receive your answer. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 50\n        }\n      }), \"Refresh to receive a new set of questions. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), \"Q: How do I get my results? \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      }), \"A: Submit answers and click on the summary link! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 58\n        }\n      }), \"Q: How many questions are available?\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 45\n        }\n      }), \"A: There are 50 unique questions! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 43\n        }\n      }), \"Q: Do I have to take the first quiz that come up?\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 58\n        }\n      }), \"A: You can use the \\\"Click to Generate Questions\\\" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 58\n        }\n      }), \"button as many times as you would like. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 49\n        }\n      }), \"Q: What is generated in the results?\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }), \"A: You will able to see your score, correct and \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 57\n        }\n      }), \"incorrect questions\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 28\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let questions = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, this.state.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(Question, {\n        id: question.id,\n        question: question.question,\n        answer: question.answer,\n        options: question.options,\n        qType: question.qType,\n        changedInput: event => this.inputChangedHandler(event, question.id),\n        selected: event => this.answerSelectedHandler(event, question.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 18\n        }\n      });\n    }));\n    let content = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: 'btnClass',\n      onClick: this.toggleInstructionsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, \"Click To Open/Close Instructions\"), instructions, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createQuestionsArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \" Click to Generate Questions\"), questions, this.state.submit);\n\n    if (this.state.showResults) {\n      content = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, \"You received \", this.state.quizResults[0], \" out of 5 points\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'App',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, \"FBLA 5 Question Quiz\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, \"Test Your Knowledge of FBLA and its History\"), content, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 63\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 72\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 81\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 99\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 108\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","QuestionData","Question","App","state","questions","submit","showInstructions","userAnswers","quizResults","showResults","createQuestionsArray","setState","console","log","questionsList","map","question","index","push","randomNums","questions5","length","r","Math","floor","random","indexOf","checkAnswers","x","alert","incorrect","correct","numCorrect","y","answer","answerSelectedHandler","event","id","questionIndex","findIndex","q","answers","target","value","inputChangedHandler","options","toggleInstructionsHandler","doesShow","render","instructions","qType","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\n\n\nclass App extends Component {\n  state = {\n    questions: [\n\n    ],\n    submit: null,\n    showInstructions: false,\n    userAnswers: [],\n    quizResults: [],\n    showResults: false\n  }\n\n  createQuestionsArray = () => {\n\n    this.setState({ userAnswers: [null, null, null, null, null] }, () => {\n      console.log(this.state.userAnswers)\n    }\n    )\n\n    let questionsList = [];\n    QuestionData.map((question, index) => {\n      return questionsList.push(question);\n\n    })\n    var randomNums = [];\n    var questions5 = [];\n    while (randomNums.length < 5) {\n      var r = Math.floor(Math.random() * 50);\n      if (randomNums.indexOf(r) === -1) {\n        randomNums.push(r);\n        questions5.push(questionsList[r]);\n      }\n      ;\n    }\n    this.setState({ questions: questions5 });\n\n    this.setState({\n      submit:\n        <button onClick={this.checkAnswers}>\n          Submit\n      </button>\n    })\n\n  };\n//activated by the submit button\n//checks to see all answers are responded to \n//calculates the total correct/incorrect\n//changes state to display these\n  checkAnswers = () => {\n    for (var x = 0; x < 5; x++) {\n      if (this.state.userAnswers[x] === null) {\n        alert(\"Please fill out all questions before submitting\")\n        return;\n      }\n    }\n    var incorrect = [];\n    var correct = [];\n    var numCorrect = 0;\n    for (var y = 0; y < 5; y++) {\n      if (this.state.userAnswers[y] === this.state.questions[y].answer) {\n        numCorrect++;\n        correct.push(this.state.questions[y]);\n      }\n      else {\n        incorrect.push(this.state.questions[y]);\n      }\n\n    }\n    this.setState({ questions: [] })\n    this.setState({ submit: null })\n    this.setState({quizResults: [{numCorrect: numCorrect, incorrect: incorrect, correct: correct}]})\n    this.setState({showResults: true})\n  }\n\n  answerSelectedHandler = (event, id) => {\n    const questionIndex = this.state.questions.findIndex(q => {\n      return q.id === id;\n    });\n\n\n    const answers = [...this.state.userAnswers];\n    answers[questionIndex] = event.target.value;\n    this.setState({ userAnswers: answers }, () => {\n      console.log(this.state.userAnswers);\n    });\n  }\n  inputChangedHandler = (event, id) => {\n    const questionIndex = this.state.questions.findIndex(q => {\n      return q.id === id;\n    });\n\n    const question = {\n      ...this.state.questions[questionIndex]\n    };\n    question.options = event.target.value;\n    const questions = [...this.state.questions];\n    questions[questionIndex] = question;\n    this.setState({ questions: questions });\n\n\n    const answers = [...this.state.userAnswers];\n    answers[questionIndex] = event.target.value;\n    this.setState({ userAnswers: answers }, () => {\n      console.log(this.state.userAnswers);\n    });\n\n  }\n\n  toggleInstructionsHandler = () => {\n    const doesShow = this.state.showInstructions;\n    this.setState({ showInstructions: !doesShow });\n  }\n\n  render() {\n    let instructions = null;\n\n    if (this.state.showInstructions) {\n      instructions = (<div>\n        <br></br>\n        <br></br>\n        Welcome to the FBLA 5 Question Quiz! <br></br>\n        Please fill out the following 5 questions <br></br>\n        and click submit to receive your answer. <br></br>\n        Refresh to receive a new set of questions. <br></br>\n        <br></br>\n        <br></br>\n        Q: How do I get my results? <br></br>\n        A: Submit answers and click on the summary link! <br></br>\n        Q: How many questions are available?<br></br>\n        A: There are 50 unique questions! <br></br>\n        Q: Do I have to take the first quiz that come up?<br></br>\n        A: You can use the \"Click to Generate Questions\" <br></br>\n        button as many times as you would like. <br></br>\n        Q: What is generated in the results?<br></br>\n        A: You will able to see your score, correct and <br></br>\n        incorrect questions<br></br>\n   \n        <br></br>\n        <br></br>\n      </div>);\n\n    }\n\n    let questions = (\n      <div>\n        {this.state.questions.map((question, index) => {\n\n          return <Question\n            id={question.id}\n            question={question.question}\n            answer={question.answer}\n            options={question.options}\n            qType={question.qType}\n            changedInput={(event) => this.inputChangedHandler(event, question.id)}\n            selected={(event) => this.answerSelectedHandler(event, question.id)}\n          />\n        })}\n\n      </div>\n    )\n        let content = \n        (<div>\n            <button\n                className={'btnClass'}\n                onClick={this.toggleInstructionsHandler}>Click To Open/Close Instructions</button>\n                {instructions}\n            <button\n                  onClick={this.createQuestionsArray}> Click to Generate Questions\n            </button>\n                {questions}\n                {this.state.submit}\n        </div> );\n        if (this.state.showResults){\n            content = (\n              <div>\n              You received {this.state.quizResults[0]} out of 5 points\n              </div>\n            );\n        }\n\n    return (\n      <div className={'App'}>\n        <h1>FBLA 5 Question Quiz</h1>\n        <h3>Test Your Knowledge of FBLA and its History</h3>\n      {content}\n        <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}