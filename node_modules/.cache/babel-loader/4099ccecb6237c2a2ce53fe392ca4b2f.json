{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [{\n        id: 'asfa1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'vasdf1',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'asdf11',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showInstructions: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const question = { ...this.state.questions[questionIndex]\n      };\n      question.name = event.target.value;\n      const questions = [...this.state.questions];\n      questions[questionIndex] = question;\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.toggleInstructionsHandler = () => {\n      const doesShow = this.state.showInstructions;\n      this.setState({\n        showInstructions: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let instructions = null;\n    let btnClass = '';\n\n    if (this.state.showInstructions) {\n      instructions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, \"Hi! Welcome to the FBLA 5 Question Quiz. \\\\n Please fill out the following 5 questions \\\\n and click submit to receive your answer. \\\\n Refresh to receive a new set of questions. \\\\n\");\n    }\n\n    let questions = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.state.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        key: question.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Question, {\n        name: question.name,\n        age: question.age,\n        changed: event => this.nameChangedHandler(event, question.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }));\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'App',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"FBLA 5 Question Quiz\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Test Your Knowledge of FBLA and its History\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: btnClass,\n      onClick: this.toggleInstructionsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Click To Open/Close Instructions\"), questions); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","classes","Question","ErrorBoundary","App","state","questions","id","name","age","otherState","showInstructions","nameChangedHandler","event","questionIndex","findIndex","q","question","target","value","setState","toggleInstructionsHandler","doesShow","render","instructions","btnClass","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  state = {\n    questions: [\n      { id: 'asfa1', name: 'Max', age: 28 },\n      { id: 'vasdf1', name: 'Manu', age: 29 },\n      { id: 'asdf11', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showInstructions: false\n  }\n\n  nameChangedHandler = ( event, id ) => {\n    const questionIndex = this.state.questions.findIndex( q => {\n      return q.id === id;\n    } );\n\n    const question = {\n      ...this.state.questions[questionIndex]\n    };\n\n    question.name = event.target.value;\n\n    const questions = [...this.state.questions];\n    questions[questionIndex] = question;\n\n    this.setState( { questions: questions } );\n  }\n\n  toggleInstructionsHandler = () => {\n    const doesShow = this.state.showInstructions;\n    this.setState( { showInstructions: !doesShow } );\n  }\n\n  render () {\n    let instructions = null;\n    let btnClass = '';\n\n    if ( this.state.showInstructions ) {\n      instructions = (<div>\n        Hi! Welcome to the FBLA 5 Question Quiz. \\n\n        Please fill out the following 5 questions \\n\n        and click submit to receive your answer. \\n\n        Refresh to receive a new set of questions. \\n\n      </div>);\n\n    }\n\n    let questions = (\n      <div>\n        {this.state.questions.map( ( question, index ) => {\n          return <ErrorBoundary key={question.id}>\n            <Question\n              name={question.name}\n              age={question.age}\n              changed={( event ) => this.nameChangedHandler( event, question.id )} />\n          </ ErrorBoundary>\n        } )}\n      </div>\n    )\n\n    return (\n      <div className={'App'}>\n        <h1>FBLA 5 Question Quiz</h1>\n        <h3>Test Your Knowledge of FBLA and its History</h3>\n        <button\n          className={btnClass}\n          onClick={this.toggleInstructionsHandler}>Click To Open/Close Instructions</button>\n        {questions}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}