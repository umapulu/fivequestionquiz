{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: [],\n      showInstructions: false\n    };\n\n    this.createQuestionsArray = () => {\n      let questionsList = [];\n      QuestionData.map((question, index) => {\n        questionsList += question;\n        return;\n      });\n      var arr = [];\n\n      while (arr.length < 5) {\n        var r = Math.floor(Math.random() * 50);\n\n        if (arr.indexOf(r) === -1) {\n          arr.push(r);\n          const questions = this.state.questions;\n          this.setState({\n            questions: [questions, questionsList[r]]\n          });\n        }\n\n        return this.state.questions;\n        ;\n      }\n\n      console.log(questionsList);\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const questionIndex = this.state.questions.findIndex(q => {\n        return q.id === id;\n      });\n      const question = { ...this.state.questions[questionIndex]\n      };\n      question.name = event.target.value;\n      const questions = [...this.state.questions];\n      questions[questionIndex] = question;\n      this.setState({\n        questions: questions\n      });\n    };\n\n    this.toggleInstructionsHandler = () => {\n      const doesShow = this.state.showInstructions;\n      this.setState({\n        showInstructions: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let instructions = null;\n\n    if (this.state.showInstructions) {\n      instructions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), \"Welcome to the FBLA 5 Question Quiz! \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 46\n        }\n      }), \"Please fill out the following 5 questions \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 51\n        }\n      }), \"and click submit to receive your answer. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 50\n        }\n      }), \"Refresh to receive a new set of questions. \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let questions = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.state.questions.map((question, index) => {\n      return /*#__PURE__*/React.createElement(Question, {\n        question: question.question,\n        answer: question.answer,\n        changed: event => this.nameChangedHandler(event, question.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }\n      });\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'App',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"FBLA 5 Question Quiz\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Test Your Knowledge of FBLA and its History\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: 'btnClass',\n      onClick: this.toggleInstructionsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Click To Open/Close Instructions\"), instructions, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createQuestionsArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \" Click to Generate Questions\"), questions); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","QuestionData","Question","ErrorBoundary","App","state","questions","showInstructions","createQuestionsArray","questionsList","map","question","index","arr","length","r","Math","floor","random","indexOf","push","setState","console","log","nameChangedHandler","event","id","questionIndex","findIndex","q","name","target","value","toggleInstructionsHandler","doesShow","render","instructions","answer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport QuestionData from './Question/questions.json';\nimport './App.css';\nimport Question from './Question/Question';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nclass App extends Component {\n  state = {\n    questions: [\n      \n    ],\n    showInstructions: false\n  }\n  createQuestionsArray = () => {\n    let questionsList = [];\n      QuestionData.map((question, index)=>{\n        questionsList += question;\n        return;\n      }) \n        var arr = [];\n    while(arr.length < 5){\n      var r = Math.floor(Math.random() * 50);\n      if(arr.indexOf(r) === -1){\n        arr.push(r)\n        const questions = this.state.questions;\n        this.setState( { questions: [questions, questionsList[r]] } )\n      }\n      return this.state.questions;\n      ;}\n      \n\n  console.log(questionsList);\n  };\n\n  \n  \n  nameChangedHandler = ( event, id ) => {\n    const questionIndex = this.state.questions.findIndex( q => {\n      return q.id === id;\n    } );\n\n    const question = {\n      ...this.state.questions[questionIndex]\n    };\n\n    question.name = event.target.value;\n\n    const questions = [...this.state.questions];\n    questions[questionIndex] = question;\n\n    this.setState( { questions: questions } );\n  }\n\n  toggleInstructionsHandler = () => {\n    const doesShow = this.state.showInstructions;\n    this.setState( { showInstructions: !doesShow } );\n  }\n\n  render () {\n    let instructions = null;\n\n    if ( this.state.showInstructions ) {\n      instructions = (<div>\n        <br></br>\n        <br></br>\n        Welcome to the FBLA 5 Question Quiz! <br></br>\n        Please fill out the following 5 questions <br></br>\n        and click submit to receive your answer. <br></br>\n        Refresh to receive a new set of questions. <br></br>\n        <br></br>\n        <br></br>\n      </div>);\n\n    }\n\n    let questions = (\n      <div>\n        {this.state.questions.map( ( question, index ) => {\n          \n         return  <Question\n          question={question.question}\n          answer={question.answer}\n          changed={( event ) => this.nameChangedHandler( event, question.id )} \n          /> \n         \n        } )}\n      </div>\n    )\n\n    return (\n      <div className={'App'}>\n        <h1>FBLA 5 Question Quiz</h1>\n        <h3>Test Your Knowledge of FBLA and its History</h3>\n        \n        <button\n          className={'btnClass'}\n          onClick={this.toggleInstructionsHandler}>Click To Open/Close Instructions</button>\n        {instructions}\n        <button\n          onClick = {this.createQuestionsArray}> Click to Generate Questions\n        </button>\n        {questions}\n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}