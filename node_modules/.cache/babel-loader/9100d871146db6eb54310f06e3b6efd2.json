{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: 'Max',\n        age: 28\n      }, {\n        name: 'Manu',\n        age: 29\n      }, {\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      //console.log('Was clicked!');\n      //this.state.persons[0].name = 'Maximillian'; don't do this\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 28\n        }, {\n          name: 'Manu',\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 27\n        }]\n      });\n    };\n\n    this.nameChangedHandler = event => {\n      this.setState({\n        persons: [{\n          name: 'Max',\n          age: 28\n        }, {\n          name: event.target.value,\n          age: 29\n        }, {\n          name: 'Stephanie',\n          age: 26\n        }]\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, this.state.persons.map(person => {\n        return /*#__PURE__*/React.createElement(Person, {\n          name: person.name,\n          age: person.age,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }\n        });\n      }));\n    }\n\n    return (\n      /*#__PURE__*/\n      //uses jsx to convert html to javascript\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 4\n        }\n      }, \" Hi! This is a react app! \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 4\n        }\n      }, \" This is really working\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: style,\n        onClick: () => this.togglePersonsHandler('Maximillian!'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 4\n        }\n      }, \" Toggle Persons \"), persons) //jsx element must have one root element (can't return more than one)\n      //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/App.js"],"names":["React","Component","Person","App","state","persons","name","age","otherState","showPersons","switchNameHandler","newName","setState","nameChangedHandler","event","target","value","togglePersonsHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","map","person"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n    {name: 'Max', age: 28},\n    {name: 'Manu', age: 29},\n    {name: 'Stephanie', age: 26}\n  ],\n  otherState: 'some other value',\n  showPersons: false\n}\n\nswitchNameHandler = (newName) => {\n  //console.log('Was clicked!');\n  //this.state.persons[0].name = 'Maximillian'; don't do this\n  this.setState( {\n    persons: [\n      {name: newName, age: 28},\n      {name: 'Manu', age: 29},\n      {name: 'Stephanie', age: 27}\n    ]\n   })\n}\n\nnameChangedHandler = (event) => {\n  this.setState( {\n  persons: [\n    {name: 'Max', age: 28},\n    {name: event.target.value, age: 29},\n    {name: 'Stephanie', age: 26}\n  ]\n} )\n}\n//ensures the this keyword refers to this class\ntogglePersonsHandler = () => {\n  const doesShow = this.state.showPersons;\n  this.setState({showPersons: !doesShow});\n}\nrender() {\n  const style = {\n    backgroundColor: 'white',\n    font: 'inherit',\n    border: '1px solid blue',\n    padding: '8px',\n    cursor: 'pointer'\n  };\n\n  let persons = null;\n\n  if (this.state.showPersons) {\n    persons = (\n      <div >\n        {this.state.persons.map(person => {\n          return <Person \n          name = {person.name} \n          age = {person.age}/>\n        })} \n    </div>  \n    )\n  }\n  return (  //uses jsx to convert html to javascript\n  <div className=\"App\">\n   <h1> Hi! This is a react app! </h1>\n   <p> This is really working</p>\n   <button \n   style = {style}\n   onClick={ ()=> this.togglePersonsHandler('Maximillian!')}> Toggle Persons </button>\n  {persons}\n  \n  </div>\n    //jsx element must have one root element (can't return more than one)\n  //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n  );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}