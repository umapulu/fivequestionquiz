{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/components/Cockpit/Cockpit.js\";\nimport React, { useEffect, useRef } from 'react';\nimport './Cockpit.css';\nimport AuthContext from '../../context/auth-context';\n\nconst cockpit = props => {\n  /*\n      const toggleBtnRef = useRef(null);\n      toggleBtnRef.current.click(); */\n\n  /*\n      // if you want to base it on props then useState()\n   useEffect(() => { \n      //pass a function to useEffect and it will render\n      //every time cockpit runs\n      //rerenders for every update\n      //can send http request in here\n       console.log('[Cockpit.js] useEffect');\n      setTimeout(() => {\n          alert('Saved data to cloud!');\n      }, 1000); \n  }, [props.persons]); //can useEffect as many times as u want\n  //send an empty array if you only want to see the first change\n  */\n  let btnClass = 'button';\n\n  if (props.showPersons) {\n    btnClass = 'buttonRed';\n  }\n\n  const assignedClasses = [];\n\n  if (props.personsLength <= 2) {\n    assignedClasses.push('red');\n  }\n\n  if (props.personsLength <= 1) {\n    assignedClasses.push('bold'); //classes will be red and bold\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \" \", props.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: assignedClasses.join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" This is really working\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: btnClass,\n    onClick: props.clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Toggle Persons\"), /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, context => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: context.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }\n  }, \" Log in \")));\n}; // ref = {toggleBtnRef} \n\n\nexport default React.memo(cockpit); //optimises functional components that \n//do not update with every change to the parent component","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/components/Cockpit/Cockpit.js"],"names":["React","useEffect","useRef","AuthContext","cockpit","props","btnClass","showPersons","assignedClasses","personsLength","push","title","join","clicked","context","login","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AAEA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC3B;;;;AAGA;;;;;;;;;;;;;;AAeA,MAAIC,QAAQ,GAAG,QAAf;;AACA,MAAID,KAAK,CAACE,WAAV,EACA;AACID,IAAAA,QAAQ,GAAG,WAAX;AACH;;AACG,QAAME,eAAe,GAAG,EAAxB;;AACH,MAAIH,KAAK,CAACI,aAAN,IAAuB,CAA3B,EAA8B;AAC7BD,IAAAA,eAAe,CAACE,IAAhB,CAAqB,KAArB;AACA;;AACD,MAAIL,KAAK,CAACI,aAAN,IAAuB,CAA3B,EAA8B;AAC7BD,IAAAA,eAAe,CAACE,IAAhB,CAAqB,MAArB,EAD6B,CACC;AAC9B;;AAEE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAML,KAAK,CAACM,KAAZ,MADJ,eAEI;AAAG,IAAA,SAAS,EAAIH,eAAe,CAACI,IAAhB,CAAqB,GAArB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,eAGI;AAAQ,IAAA,SAAS,EAAIN,QAArB;AACA,IAAA,OAAO,EAAED,KAAK,CAACQ,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAOI,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,OAAD,iBAAa;AAAQ,IAAA,OAAO,EAAIA,OAAO,CAACC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlB,CAPJ,CADJ;AAeH,CA/CD,C,CAgDI;;;AACJ,eAAef,KAAK,CAACgB,IAAN,CAAWZ,OAAX,CAAf,C,CAAoC;AACpC","sourcesContent":["import React, {useEffect, useRef} from 'react';\n\nimport './Cockpit.css';\nimport AuthContext from '../../context/auth-context';\nconst cockpit = (props) => {\n/*\n    const toggleBtnRef = useRef(null);\n    toggleBtnRef.current.click(); */\n/*\n    // if you want to base it on props then useState()\n useEffect(() => { \n    //pass a function to useEffect and it will render\n    //every time cockpit runs\n    //rerenders for every update\n    //can send http request in here\n     console.log('[Cockpit.js] useEffect');\n    setTimeout(() => {\n        alert('Saved data to cloud!');\n    }, 1000); \n}, [props.persons]); //can useEffect as many times as u want\n//send an empty array if you only want to see the first change\n*/\n\nlet btnClass = 'button';\nif (props.showPersons)\n{\n    btnClass = 'buttonRed';\n}\n    const assignedClasses = [];\n if (props.personsLength <= 2) {\n  assignedClasses.push('red'); \n }\n if( props.personsLength <= 1) {\n  assignedClasses.push('bold'); //classes will be red and bold\n }\n    \n    return (\n        <div>\n            <h1> {props.title} </h1>\n            <p className = {assignedClasses.join(' ')}> This is really working</p>\n            <button className = {btnClass}\n            onClick={props.clicked}> \n            Toggle Persons \n            </button>\n            <AuthContext.Consumer>\n                {(context) => <button onClick = {context.login} > Log in </button>}\n            </AuthContext.Consumer>\n            \n        </div>\n        )\n\n};\n    // ref = {toggleBtnRef} \nexport default React.memo(cockpit); //optimises functional components that \n//do not update with every change to the parent component"]},"metadata":{},"sourceType":"module"}