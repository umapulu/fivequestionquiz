{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/containers/App.js\";\nimport React, { Component } from 'react'; //import styled from 'styled-components';\n\nimport './App.css';\nimport Person from '../components/Persons/Person/Person';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport Persons from '.Persons/Persons'; //import Radium, {StyleRoot} from 'radium';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'aoieahi',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'nfaioen',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'nfaogne',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; //you can also use Object.assign({}, object)\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n    let buttonStatus = 'button';\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }));\n      buttonStatus = 'buttonRed';\n    }\n\n    const assignedClasses = [];\n\n    if (this.state.persons.length <= 2) {\n      assignedClasses.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      assignedClasses.push('bold'); //classes will be red and bold\n    }\n\n    return (\n      /*#__PURE__*/\n      //uses jsx to convert html to javascript\n      //<StyleRoot>\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, \" Hi! This is a react app! \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: assignedClasses.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, \" This is really working\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonStatus,\n        onClick: () => this.togglePersonsHandler('Maximillian!'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, \"Toggle Persons \"), persons) //</StyleRoot>\n      //jsx element must have one root element (can't return more than one)\n      //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n\n    );\n  }\n\n}\n\nexport default App; //higher order component","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/containers/App.js"],"names":["React","Component","Person","ErrorBoundary","Persons","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","buttonStatus","assignedClasses","length","push","join"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import styled from 'styled-components';\nimport './App.css';\nimport Person from '../components/Persons/Person/Person';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport Persons from '.Persons/Persons';\n//import Radium, {StyleRoot} from 'radium';\n\nclass App extends Component {\n  state = {\n    persons: [\n    {id: 'aoieahi', name: 'Max', age: 28},\n    {id: 'nfaioen', name: 'Manu', age: 29},\n    {id: 'nfaogne', name: 'Stephanie', age: 26}\n  ],\n  otherState: 'some other value',\n  showPersons: false\n}\n\nnameChangedHandler = ( event, id ) => {\n  const personIndex = this.state.persons.findIndex(p => {\n    return p.id === id;\n  });\n  \nconst person ={\n   ...this.state.persons[personIndex]\n};\n\n//you can also use Object.assign({}, object)\n\nperson.name = event.target.value;\n\nconst persons = [...this.state.persons];\npersons[personIndex]= person;\n\nthis.setState( {persons: persons});\n}\n\ndeletePersonHandler = (personIndex) => {\n  //const persons = this.state.persons.slice();\n  const persons = [...this.state.persons];\n  persons.splice(personIndex,1);\n  this.setState({persons: persons})\n}\n\n//ensures the this keyword refers to this class\ntogglePersonsHandler = () => {\n  const doesShow = this.state.showPersons;\n  this.setState({showPersons: !doesShow});\n}\n render() {\n\n\n  let persons = null;\n  let buttonStatus = 'button';\n\n  if (this.state.showPersons) {\n    persons = (\n      <div >\n        <Persons persons = {this.state.persons}\n        clicked = {this.deletePersonHandler}\n        changed = {this.nameChangedHandler} />     \n    </div> \n    )\n \n\n    buttonStatus = 'buttonRed';\n  }\n\n const assignedClasses = [];\n if (this.state.persons.length <= 2) {\n  assignedClasses.push('red'); \n }\n if( this.state.persons.length <= 1) {\n  assignedClasses.push('bold'); //classes will be red and bold\n }\n\n  return (  //uses jsx to convert html to javascript\n  //<StyleRoot>\n    <div className= 'App' >\n      <h1> Hi! This is a react app! </h1>\n      <p className = {assignedClasses.join(' ')}> This is really working</p>\n      <button className = {buttonStatus}\n      onClick={ ()=> this.togglePersonsHandler('Maximillian!')}> \n      Toggle Persons </button>\n      {persons}\n     </div>\n  //</StyleRoot>\n    //jsx element must have one root element (can't return more than one)\n  //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n  );\n}\n}\n\nexport default (App); //higher order component"]},"metadata":{},"sourceType":"module"}