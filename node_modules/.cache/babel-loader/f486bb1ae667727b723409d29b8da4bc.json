{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/Question/Question.js\";\nimport React from 'react';\nimport './Question.css';\n\nconst question = props => {\n  //const rnd = Math.random();\n  //if ( rnd > 0.7 ) {\n  //    throw new Error( 'Something went wrong' );\n  //}\n  //onClick={props.click}\n  //<p>{props.children}</p>\n  var questionFormat = null;\n\n  if (props.qType === \"ni\") {\n    questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n      className: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, props.question, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: props.changed,\n      value: \"input number here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }));\n  } else if (props.qType === \"dd\") {\n    questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n      className: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, props.question, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropbtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"Dropdown\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, props.incorrect.map((answer, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        id: props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }\n      }, answer);\n    }))));\n  } else {\n    questionFormat = /*#__PURE__*/React.createElement(\"div\", {\n      className: 'question',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, props.question, \" \"), props.incorrect.map((answer, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        onChange: props.changed,\n        name: props.id,\n        id: props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, answer));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, questionFormat));\n};\n\nexport default question;","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/Question/Question.js"],"names":["React","question","props","questionFormat","qType","changed","incorrect","map","answer","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,gBAAR;;AAEA,MAAMC,QAAQ,GAAKC,KAAF,IAAa;AAG1B;AAEA;AACA;AACA;AACA;AACA;AACA,MAAIC,cAAc,GAAG,IAArB;;AACA,MAAID,KAAK,CAACE,KAAN,KAAgB,IAApB,EAAyB;AACrBD,IAAAA,cAAc,gBACT;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACD,QAAX,MADC,eAED;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC,KAAK,CAACG,OAAnC;AAA4C,MAAA,KAAK,EAAG,mBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,CADL;AAKH,GAND,MAOK,IAAIH,KAAK,CAACE,KAAN,KAAgB,IAApB,EAA0B;AAC3BD,IAAAA,cAAc,gBAEd;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACD,QAAX,MADR,eAEQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,0BAAO;AAAG,QAAA,EAAE,EAAIP,KAAK,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,MAArB,CAAP;AACH,KAFA,CADL,CAFJ,CAFR,CAFA;AAaH,GAdI,MAeC;AACFL,IAAAA,cAAc,gBACT;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACD,QAAX,MADC,EAEIC,KAAK,CAACI,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,0BAAO;AAAK,QAAA,KAAK,EAAG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,QAAQ,EAAEP,KAAK,CAACG,OAApC;AAA6C,QAAA,IAAI,EAAIH,KAAK,CAACQ,EAA3D;AAA+D,QAAA,EAAE,EAAIR,KAAK,CAACQ,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,MAAR,CAFG,CAAP;AAKP,KANI,CAFJ,CADL;AAYH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,cADL,CAFJ,CADJ;AAQH,CAzDD;;AA2DA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport  './Question.css';\n\nconst question = ( props ) => {\n    \n\n    //const rnd = Math.random();\n\n    //if ( rnd > 0.7 ) {\n    //    throw new Error( 'Something went wrong' );\n    //}\n    //onClick={props.click}\n    //<p>{props.children}</p>\n    var questionFormat = null;\n    if (props.qType === \"ni\"){\n        questionFormat = \n            (<div className={'question'} >\n            <p >{props.question} </p>\n            <input type=\"text\" onChange={props.changed} value = \"input number here\" />\n            </div>);\n    }\n    else if (props.qType === \"dd\") {\n        questionFormat = \n        (\n        <div className={'question'}>\n                <p >{props.question} </p>\n                <div className=\"dropdown\">\n                    <button className=\"dropbtn\">Dropdown</button>\n                    <div className=\"dropdown-content\">\n                        {props.incorrect.map((answer, index) => {\n                            return <p id = {props.id} >{answer}</p>\n                        })}\n                    </div>\n                </div>\n        </div>);\n    }\n    else  {\n        questionFormat = \n            (<div className={'question'}>\n            <p >{props.question} </p>\n                {props.incorrect.map((answer, index) => {\n                    return <div align = 'left'>\n                        <input type=\"radio\" onChange={props.changed} name = {props.id} id = {props.id}/>\n                        <label>{answer}</label>\n                        \n                    </div>\n            })}\n            \n            </div>);\n    }\n\n\n    return (\n        <div>\n            \n            <div>\n                {questionFormat}\n            </div>\n        </div>\n    )\n};\n\nexport default question;"]},"metadata":{},"sourceType":"module"}