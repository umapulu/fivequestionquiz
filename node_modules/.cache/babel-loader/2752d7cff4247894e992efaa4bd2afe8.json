{"ast":null,"code":"var _jsxFileName = \"/Users/deepapulugurtha/Desktop/my-app/src/containers/App.js\";\nimport React, { Component } from 'react'; //import styled from 'styled-components';\n\nimport './App.css'; //import Person from '../components/Persons/Person/Person';\n//import ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit'; //import Aux from '../hoc/Auxiliary';\n//import withClass from '../hoc/WithClass'; //not a component\n//import Radium, {StyleRoot} from 'radium';\n//purecomponent is a component which checks for changes in props\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        id: 'aoieahi',\n        name: 'Max',\n        age: '28'\n      }, {\n        id: 'nfaioen',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'nfaogne',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false,\n      showCockpit: true\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; //you can also use Object.assign({}, object)\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      //const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    console.log('[App.js] constructor');\n  }\n\n  //static getDerivedStateFromProps(props,state) {\n  //  console.log('[App.js] getDerivedStateFromProps', props);\n  //  return state;\n  //}\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate() {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null; //let buttonStatus = 'button';\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }); // buttonStatus = 'buttonRed';\n    }\n\n    return (\n      /*#__PURE__*/\n      //uses jsx to convert html to javascript\n      //<StyleRoot>\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.setState({\n            showCockpit: !this.state.showCockpit\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, \"toggle cockpit \"), this.state.showCockpit ? /*#__PURE__*/React.createElement(Cockpit, {\n        title: this.props.appTitle,\n        showPersons: this.state.showPersons,\n        personsLength: this.state.persons.length,\n        clicked: this.togglePersonsHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }) : null, persons) //</StyleRoot>\n      //jsx element must have one root element (can't return more than one)\n      //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n\n    );\n  }\n\n}\n\nexport default App; //higher order component","map":{"version":3,"sources":["/Users/deepapulugurtha/Desktop/my-app/src/containers/App.js"],"names":["React","Component","Persons","Cockpit","App","constructor","props","state","persons","id","name","age","otherState","showPersons","showCockpit","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","console","log","componentDidMount","shouldComponentUpdate","componentDidUpdate","render","appTitle","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import styled from 'styled-components';\nimport './App.css';\n//import Person from '../components/Persons/Person/Person';\n//import ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n//import Aux from '../hoc/Auxiliary';\n//import withClass from '../hoc/WithClass'; //not a component\n//import Radium, {StyleRoot} from 'radium';\n//purecomponent is a component which checks for changes in props\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[App.js] constructor');\n  }\n\n\n  state = {\n    persons: [\n    {id: 'aoieahi', name: 'Max', age: '28'},\n    {id: 'nfaioen', name: 'Manu', age: 29},\n    {id: 'nfaogne', name: 'Stephanie', age: 26}\n  ],\n  otherState: 'some other value',\n  showPersons: false,\n  showCockpit: true\n}\n\n//static getDerivedStateFromProps(props,state) {\n//  console.log('[App.js] getDerivedStateFromProps', props);\n//  return state;\n//}\n\ncomponentDidMount () {\n  console.log('[App.js] componentDidMount');\n}\n\nshouldComponentUpdate() {\n  console.log('[App.js] shouldComponentUpdate');\n  return true;\n}\n \ncomponentDidUpdate() {\n  console.log('[App.js] componentDidUpdate');\n}\n\nnameChangedHandler = ( event, id ) => {\n  const personIndex = this.state.persons.findIndex(p => {\n    return p.id === id;\n  });\n  \nconst person ={\n   ...this.state.persons[personIndex]\n};\n\n//you can also use Object.assign({}, object)\n\nperson.name = event.target.value;\n\nconst persons = [...this.state.persons];\npersons[personIndex]= person;\n\nthis.setState( {persons: persons});\n}\n\ndeletePersonHandler = (personIndex) => {\n  //const persons = this.state.persons.slice();\n  const persons = [...this.state.persons];\n  persons.splice(personIndex,1);\n  this.setState({persons: persons})\n}\n\n//ensures the this keyword refers to this class\ntogglePersonsHandler = () => {\n  const doesShow = this.state.showPersons;\n  this.setState({showPersons: !doesShow});\n}\n render() {\n    console.log('[App.js] render');\n\n  let persons = null;\n  //let buttonStatus = 'button';\n\n  if (this.state.showPersons) {\n    persons = (\n        <Persons persons = {this.state.persons}\n        clicked = {this.deletePersonHandler}\n        changed = {this.nameChangedHandler} />     \n \n    )\n\n   // buttonStatus = 'buttonRed';\n  }\n\n \n\n  return (  //uses jsx to convert html to javascript\n  //<StyleRoot>\n    <div className= 'App' >\n      <button \n      onClick = {() => {\n        this.setState({showCockpit: !this.state.showCockpit});\n      } } > \n      toggle cockpit </button>\n      {this.state.showCockpit ? ( \n        <Cockpit \n        title = {this.props.appTitle}\n        showPersons = {this.state.showPersons}\n        personsLength = {this.state.persons.length} \n        clicked = {this.togglePersonsHandler}\n        /> \n      ) : null}\n      {persons}\n     </div>\n  //</StyleRoot>\n    //jsx element must have one root element (can't return more than one)\n  //React.createElement('div', null, React.createElement('h1', 'Does this work?'))\n  );\n}\n}\n\nexport default (App); //higher order component"]},"metadata":{},"sourceType":"module"}